#include <stdio.h>
#include <stdbool.h>

// Function to check if a number is bouncy
bool is_bouncy(int n) {
    // Convert the number to a string for easy digit access
    int prev_digit = n % 10; // Start with the last digit
    n /= 10;
    bool increasing = false;
    bool decreasing = false;
    
    while (n > 0) {
        int current_digit = n % 10;
        
        // Compare current and previous digits
        if (current_digit < prev_digit) {
            decreasing = true;
        } else if (current_digit > prev_digit) {
            increasing = true;
        }
        
        // If both increasing and decreasing transitions are found, it's bouncy
        if (increasing && decreasing) {
            return true;
        }
        
        prev_digit = current_digit; // Update prev_digit for next iteration
        n /= 10; // Move to the next digit
    }
    
    // If only increasing or only decreasing (or no transitions), it's not bouncy
    return false;
}

int main() {
    int n;
    // Read the input number
    scanf("%d", &n);
    
    // Output the result
    if (is_bouncy(n)) {
        printf("True\n");
    } else {
        printf("False\n");
    }

    return 0;
}
